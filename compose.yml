services:

  mealie:
    image: ghcr.io/mealie-recipes/mealie:latest
    container_name: ${SERVICE_NAME}
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1000M
    depends_on:
      postgres:
        condition: service_healthy
    security_opt:
      - no-new-privileges:true
    networks:
       - default
       - proxy
       - external
    volumes:
      - ./data:/app/data/
    environment:
      # - LOG_LEVEL=DEBUG
      # - ALLOW_SIGNUP=true
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - MAX_WORKERS=1
      - WEB_CONCURRENCY=1
      - BASE_URL=https://${SERVICE_NAME}.${MY_DOMAIN}
      # Database Settings
      - DB_ENGINE=postgres
      - POSTGRES_USER=mealie
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=mealie
      # OpenID Connect
      - OIDC_AUTH_ENABLED=true
      - OIDC_CONFIGURATION_URL=${OIDC_CONFIGURATION_URL}
      - OIDC_SIGNUP_ENABLED=true
      - OIDC_CLIENT_ID=mealie
      - OIDC_AUTO_REDIRECT=true
      - OIDC_PROVIDER_NAME=SSO
      - OIDC_USER_CLAIM=name
      - OIDC_USER_GROUP=user # create a role with this name
      - OIDC_ADMIN_GROUP=mealie-admin # create a role with this name
    labels:
      - "homepage.name=Mealie"
      - "homepage.description=Recipe management and meal planning"
      - "homepage.icon=mealie"
      - "homepage.href=https://${SERVICE_NAME}.${MY_DOMAIN}"
      - "homepage.group=Utilities"
      - "traefik.enable=true"
      - "traefik.http.routers.${SERVICE_NAME}.entrypoints=http"
      - "traefik.http.routers.${SERVICE_NAME}.rule=Host(`${SERVICE_NAME}.${MY_DOMAIN}`)"
      - "traefik.http.routers.${SERVICE_NAME}.middlewares=default-whitelist@file"
      - "traefik.http.routers.${SERVICE_NAME}.middlewares=${SERVICE_NAME}-https-redirect"
      - "traefik.http.routers.${SERVICE_NAME}-secure.entrypoints=https"
      - "traefik.http.routers.${SERVICE_NAME}-secure.rule=Host(`${SERVICE_NAME}.${MY_DOMAIN}`)"
      - "traefik.http.routers.${SERVICE_NAME}-secure.tls=true"
      - "traefik.http.routers.${SERVICE_NAME}-secure.service=${SERVICE_NAME}"
      - "traefik.http.middlewares.${SERVICE_NAME}-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.services.${SERVICE_NAME}.loadbalancer.server.port=${SERVICE_INTERNAL_PORT}"
      - "traefik.docker.network=proxy"

  postgres:
    image: postgres:15
    container_name: ${SERVICE_NAME}_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: unless-stopped
    environment:
      - POSTGRES_USER=mealie
      - POSTGRES_DB=mealie
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - './db_data:/var/lib/postgresql/data'
    networks:
      - default

networks:
  proxy:
    external: true
  external:
    external: true
